<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Richard Chen&#39;s Blog</title>
  
  <subtitle>The more you know, the more you know you don&#39;t know.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://iochen.com/"/>
  <updated>2020-03-23T07:12:44.058Z</updated>
  <id>https://iochen.com/</id>
  
  <author>
    <name>Richard Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[已证伪]柯拉兹猜想轮数规律</title>
    <link href="https://iochen.com/2020/03/23/collatz/"/>
    <id>https://iochen.com/2020/03/23/collatz/</id>
    <published>2020-03-23T02:25:04.000Z</published>
    <updated>2020-03-23T07:12:44.058Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><p>[已证伪]</p><p>另 $n$ 为 $(0, 1ek]$ 中 一值，使得$CollatzRound(n)$ 为最大值，</p><p>那么$$\frac{n - 2^{k+1} + 1}{2^{k + 1}}$$ 为正整数</p><p>[已证伪]</p><p>数据：</p><table><thead><tr><th>range</th><th>round</th><th>number</th></tr></thead><tbody><tr><td>0..1e1</td><td>19</td><td>9</td></tr><tr><td>0..1e2</td><td>118</td><td>97</td></tr><tr><td>0..1e3</td><td>178</td><td>871</td></tr><tr><td>0..1e4</td><td>261</td><td>6171</td></tr><tr><td>0..1e5</td><td>350</td><td>77031</td></tr><tr><td>0..1e6</td><td>524</td><td>837799</td></tr><tr><td>0..1e7</td><td>685</td><td>8400511</td></tr><tr><td>0..1e8</td><td>949</td><td>63728127</td></tr><tr><td>0..1e9</td><td>986</td><td>670617279</td></tr></tbody></table><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --&gt;&lt;p&gt;[已证伪]&lt;/p&gt;&lt;p&gt;另 $n$ 为 $(0, 1ek]$ 中 一值，使得$CollatzRound(n)$ 为最大值，
      
    
    </summary>
    
      <category term="math" scheme="https://iochen.com/categories/math/"/>
    
    
      <category term="math" scheme="https://iochen.com/tags/math/"/>
    
      <category term="collatz" scheme="https://iochen.com/tags/collatz/"/>
    
  </entry>
  
  <entry>
    <title>Linux下使用ExifTool对EXIF的操作</title>
    <link href="https://iochen.com/2020/02/04/view-edit-remove-exif-data-with-exiftool/"/>
    <id>https://iochen.com/2020/02/04/view-edit-remove-exif-data-with-exiftool/</id>
    <published>2020-02-04T09:48:18.000Z</published>
    <updated>2020-02-04T12:12:38.263Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>EXIF</strong>数据可以包括你的相机信息，快门，光圈，ISO，创建时间，编辑信息，GPS信息等信息，他们会在无心之中泄漏你的隐私，特别是上传照片到互联网上时，那更是有极大的泄漏风险。因此，在上传照片到网路上时，请务必删除<strong>EXIF</strong>信息。</p><p>本篇文章就是要教你在<strong>Linux</strong>下，如何使用<strong>ExifTool</strong>查看、修改与删除图片的<strong>EXIF</strong>数据</p><h1 id="安装ExifTool"><a href="#安装ExifTool" class="headerlink" title="安装ExifTool"></a>安装<strong>ExifTool</strong></h1><h2 id="openSUSE"><a href="#openSUSE" class="headerlink" title="openSUSE"></a>openSUSE</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zypper <span class="keyword">in</span> exiftool</span><br></pre></td></tr></table></figure><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install libimage-exiftool-perl</span><br></pre></td></tr></table></figure><h2 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install perl-Image-ExifTool</span><br></pre></td></tr></table></figure><h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><p>到<a href="https://exiftool.org/" target="_blank" rel="noopener"><strong>ExifTool</strong>官网</a>下载二进制包，解压并进入。如有需要，请链接到<code>/usr/bin/</code></p><h1 id="使用ExifTool"><a href="#使用ExifTool" class="headerlink" title="使用ExifTool"></a>使用ExifTool</h1><h2 id="查看EXIF"><a href="#查看EXIF" class="headerlink" title="查看EXIF"></a>查看<strong>EXIF</strong></h2><h3 id="直接查看"><a href="#直接查看" class="headerlink" title="直接查看"></a>直接查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool &#123;&#123;InputFile&#125;&#125;</span><br></pre></td></tr></table></figure><p>可选参数：</p><ul><li><code>-a</code> 查看所有metadata，但博主实测并没有增加多少新的数据，还重复了很多</li></ul><h3 id="导出为HTML"><a href="#导出为HTML" class="headerlink" title="导出为HTML"></a>导出为<strong>HTML</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool -h &#123;&#123;InputFile&#125;&#125; &gt; &#123;&#123;OutputFile&#125;&#125;</span><br></pre></td></tr></table></figure><p>可选参数：</p><ul><li><code>-a</code> 查看所有metadata</li></ul><h3 id="导出为json"><a href="#导出为json" class="headerlink" title="导出为json"></a>导出为json</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool -j &#123;&#123;InputFile&#125;&#125; &gt; &#123;&#123;OutputFile&#125;&#125;</span><br></pre></td></tr></table></figure><p>可选参数：</p><ul><li><code>-a</code> 查看所有metadata</li></ul><h2 id="编辑EXIF"><a href="#编辑EXIF" class="headerlink" title="编辑EXIF"></a>编辑EXIF</h2><h3 id="写入到单文件"><a href="#写入到单文件" class="headerlink" title="写入到单文件"></a>写入到单文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool -&#123;&#123;TAG&#125;&#125;=&#123;&#123;Content&#125;&#125;  &#123;&#123;InputFile&#125;&#125;</span><br></pre></td></tr></table></figure><p><em>example:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool -comment=<span class="string">"Good Quality"</span> -artist=<span class="string">"Richard Chen"</span> input.png</span><br></pre></td></tr></table></figure><h3 id="写入到多文件或文件夹"><a href="#写入到多文件或文件夹" class="headerlink" title="写入到多文件或文件夹"></a>写入到多文件或文件夹</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool -&#123;&#123;TAG&#125;&#125;=&#123;&#123;Content&#125;&#125; &#123;&#123;InputFile1&#125;&#125; &#123;&#123;InputFile2&#125;&#125; &#123;&#123;Folder&#125;&#125;</span><br></pre></td></tr></table></figure><p><em>example:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool -comment=<span class="string">"Good Quality"</span> -artist=<span class="string">"Richard Chen"</span> input_1.png input_2.jpg ~/Pictures/</span><br></pre></td></tr></table></figure><h2 id="删除EXIF"><a href="#删除EXIF" class="headerlink" title="删除EXIF"></a>删除EXIF</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool -all= &#123;&#123;InputFile&#125;&#125;</span><br></pre></td></tr></table></figure><p><em>example:</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool -all= input_1.png input_2.jpg ~/Pictures/</span><br></pre></td></tr></table></figure><h3 id="文件夹下所有图片"><a href="#文件夹下所有图片" class="headerlink" title="文件夹下所有图片"></a>文件夹下所有图片</h3><p>此方法适用于多级文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find &#123;&#123;Folder&#125;&#125; -iname <span class="string">"*.&#123;&#123;Ext&#125;&#125;"</span> -<span class="built_in">exec</span> exiftool -all= &#123;&#125; +</span><br></pre></td></tr></table></figure><p><em>example:</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find ~/Pictures/ -iname <span class="string">"*.jpg"</span> -<span class="built_in">exec</span> exiftool -all= &#123;&#125; +</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a><em>References</em></h1><p><a href="https://exiftool.org/examples.html" target="_blank" rel="noopener"><em>ExifTool Command-Line Examples</em></a></p><p><a href="https://exiftool.org/exiftool_pod.pdf" target="_blank" rel="noopener"><em>User Contributed Perl Documentation</em></a></p><p><em>Other resources on the Internet</em></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Linux下使用ExifTool查看、修改与删除图片的EXIF数据
    
    </summary>
    
      <category term="Apps" scheme="https://iochen.com/categories/Apps/"/>
    
      <category term="ExifTool" scheme="https://iochen.com/categories/Apps/ExifTool/"/>
    
    
      <category term="Linux" scheme="https://iochen.com/tags/Linux/"/>
    
      <category term="ExifTool" scheme="https://iochen.com/tags/ExifTool/"/>
    
      <category term="EXIF" scheme="https://iochen.com/tags/EXIF/"/>
    
  </entry>
  
  <entry>
    <title>[Unsolved] Wrong file size</title>
    <link href="https://iochen.com/2020/02/03/filesize-puzzle/"/>
    <id>https://iochen.com/2020/02/03/filesize-puzzle/</id>
    <published>2020-02-03T06:30:22.000Z</published>
    <updated>2020-02-03T09:59:15.438Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><h1 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h1><ul><li>System: <strong>openSUSE</strong> <em>15.1</em></li><li>Desktop: <strong>KDE</strong> <em>Plasma</em></li></ul><h1 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h1><p><img src="/img/filesize-puzzle/image-20200203174433732.png" alt="image-20200203174433732"></p><p>Other files under the same folder:</p><p><img src="/img/filesize-puzzle/image-20200203174529757.png" alt="image-20200203174529757"></p><p>Copyed to other folder:</p><p><img src="/img/filesize-puzzle/image-20200203174744479.png" alt="image-20200203174744479"></p><p>After rebooted:</p><p><img src="/img/filesize-puzzle/image-20200203175030071.png" alt="image-20200203175030071"></p><p>File type:</p><p><img src="/img/filesize-puzzle/image-20200203175053415.png" alt="image-20200203175053415"></p><h1 id="My-Guess"><a href="#My-Guess" class="headerlink" title="My Guess"></a>My Guess</h1><p>There is a place, which caches the file size of every file. When the file is generating(not finished), it caches the file size. After moved to other folder, or computer is rebooted, it will refresh the cache.</p><p>But… it’s a bug though :)</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      wrong file size shown on kde
    
    </summary>
    
      <category term="Linux" scheme="https://iochen.com/categories/Linux/"/>
    
      <category term="openSUSE" scheme="https://iochen.com/categories/Linux/openSUSE/"/>
    
    
      <category term="Linux" scheme="https://iochen.com/tags/Linux/"/>
    
      <category term="Issue" scheme="https://iochen.com/tags/Issue/"/>
    
  </entry>
  
  <entry>
    <title>从订阅链接生成V2Ray配置 - V2Gen的使用</title>
    <link href="https://iochen.com/2020/02/02/v2gen-usage/"/>
    <id>https://iochen.com/2020/02/02/v2gen-usage/</id>
    <published>2020-02-02T10:26:20.000Z</published>
    <updated>2020-03-03T04:54:19.694Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><h1 id="V2Gen"><a href="#V2Gen" class="headerlink" title="V2Gen"></a>V2Gen</h1><p>从订阅以及 <code>vmess://XXXXXXXXXXXX</code> 链接中生成 V2Ray json 文件</p><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/iochen/v2gen/" target="_blank" rel="noopener"><strong><em>github.com/iochen/v2gen</em></strong></a></p><h2 id="使用预览"><a href="#使用预览" class="headerlink" title="使用预览"></a>使用预览</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">richard@openSUSE~&gt; v2gen -u <span class="string">"https://example.ltd/xxxxxx"</span></span><br><span class="line">[0]     中继香港G1 Media (HK)(1)        [21.00ms (cu2.example.ltd)]</span><br><span class="line">[1]     中继香港G2 Media (HK)(1)        [21.02ms (cu1.example.ltd)]</span><br><span class="line">[2]     中继香港C1 Media (HK)(1)        [34.36ms (hkc1.example.ltd)]</span><br><span class="line">[3]     中继香港C2 Media (HK)(1)        [39.67ms (hkc2.example.ltd)]</span><br><span class="line">[4]     中继香港C3 Media (HK)(1)        [43.59ms (hkc3.example.ltd)]</span><br><span class="line">[5]     中继香港C4 Media (HK)(1)        [35.71ms (hkc4.example.ltd)]</span><br><span class="line">...(节点过多，不一一展示)</span><br><span class="line">[47]    美国GIA 3 Media (US)(0.7)       [140.48ms (us3.example.ltd)]</span><br><span class="line">[48]    香港 8 (HK)(1)                  [70.38ms (hk9.example.ltd)]</span><br><span class="line">[49]    香港 9 (HK)(1)                  [72.74ms (hk10.example.ltd)]</span><br><span class="line">[50]    香港负载均衡 1 Test (HK)(1)      [16.41ms (1.1.1.1)]</span><br><span class="line">=====================</span><br><span class="line">Please Select:</span><br></pre></td></tr></table></figure><p>你可以到<a href="/donate/"><strong><em>这里</em></strong></a>使用博主的AFF</p><h2 id="如何安装"><a href="#如何安装" class="headerlink" title="如何安装"></a>如何安装</h2><p>编译它（请确保您的<code>$GOPATH/bin/</code>已添加至<code>$PATH</code>中）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u github.com/iochen/v2gen/cmd</span><br></pre></td></tr></table></figure><p>或者到 <a href="https://github.com/iochen/v2gen/releases" target="_blank" rel="noopener"><strong><em>GitHub Release</em></strong></a> 下载</p><h2 id="常用情景"><a href="#常用情景" class="headerlink" title="常用情景"></a>常用情景</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v2gen -u <span class="string">"https://example.ltd/xxxxxx"</span> -o &lt;V2Ray配置文件路径&gt; <span class="comment"># -o 参数不加，为默认路径</span></span><br><span class="line">v2gen -u <span class="string">"https://example.ltd/xxxxxx"</span> -r  <span class="comment"># 随机节点</span></span><br><span class="line">v2gen -u <span class="string">"https://example.ltd/xxxxxx"</span> -n &lt;节点编号&gt; -o <span class="string">"-"</span> | jq .  <span class="comment"># 使用管道进行进阶操作（此处为举例）</span></span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Usage of v2gen:</span><br><span class="line">  -c string</span><br><span class="line">        v2gen配置文件路径 (default &quot;/etc/v2ray/v2gen.ini&quot;)</span><br><span class="line">  -init</span><br><span class="line">        初始化v2gen配置文件</span><br><span class="line">  -n int</span><br><span class="line">        节点引索 (default -1)</span><br><span class="line">  -np</span><br><span class="line">        不ping</span><br><span class="line">  -o string</span><br><span class="line">        输出路径 (default &quot;/etc/v2ray/config.json&quot;)</span><br><span class="line">  -r    随机节点引索</span><br><span class="line">  -tpl string</span><br><span class="line">        V2Ray模板路径</span><br><span class="line">  -u string</span><br><span class="line">        订阅链接</span><br><span class="line">  -v    展示版本</span><br><span class="line">  -vmess string</span><br><span class="line">        vmess 链接</span><br></pre></td></tr></table></figure><h2 id="V2Gen-用户配置"><a href="#V2Gen-用户配置" class="headerlink" title="V2Gen 用户配置"></a>V2Gen 用户配置</h2><p>你可以使用 <code>v2gen --init</code> 来生成一个新的</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># V2Ray 日志等级</span></span><br><span class="line"><span class="comment"># ( debug | info | warning | error | none )</span></span><br><span class="line"><span class="attr">loglevel:</span> <span class="string">warning</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Socks 端口</span></span><br><span class="line"><span class="attr">socksPort:</span> <span class="number">1080</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Http 端口</span></span><br><span class="line"><span class="attr">httpPort:</span> <span class="number">1081</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否允许UDP流量</span></span><br><span class="line"><span class="comment"># ( true | false )</span></span><br><span class="line"><span class="attr">udp:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安全</span></span><br><span class="line"><span class="comment"># ( aes-128-gcm | aes-256-gcm | chacha20-poly1305 | auto | none )</span></span><br><span class="line"><span class="attr">security:</span> <span class="string">aes-256-gcm</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否开启 mux</span></span><br><span class="line"><span class="comment"># ( true | false )</span></span><br><span class="line"><span class="attr">mux:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mux 并发数</span></span><br><span class="line"><span class="attr">concurrency:</span> <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DNS 服务器</span></span><br><span class="line"><span class="attr">dns1:</span> <span class="number">9.9</span><span class="number">.9</span><span class="number">.9</span></span><br><span class="line"><span class="attr">dns2:</span> <span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中国IP与网站是否直连</span></span><br><span class="line"><span class="comment"># ( true | false )</span></span><br><span class="line"><span class="attr">china:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>下面的配置可能不会在所有节点上生效</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否允许不安全连接 ( true | false )</span></span><br><span class="line"><span class="attr">allowInsecure:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># KCP mtu 值</span></span><br><span class="line"><span class="attr">mtu:</span> <span class="number">1350</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># KCP tti 值</span></span><br><span class="line"><span class="attr">tti:</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># KCP 最大上行速度</span></span><br><span class="line"><span class="comment"># 单位: MB/s</span></span><br><span class="line"><span class="attr">up:</span> <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># KCP 最大下行速度</span></span><br><span class="line"><span class="comment"># 单位: MB/s</span></span><br><span class="line"><span class="attr">down:</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否开启 UDP 拥堵控制 ( true | false )</span></span><br><span class="line"><span class="attr">congestion:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读缓冲区大小</span></span><br><span class="line"><span class="comment"># 单位: MB</span></span><br><span class="line"><span class="attr">readBufferSize:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 写缓冲区大小</span></span><br><span class="line"><span class="comment"># 单位: MB</span></span><br><span class="line"><span class="attr">writeBufferSize:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><p><em>V1.1.2</em></p><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul><li><em>V1.2.1</em>: <strong>VmessPing</strong></li></ul><h2 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h2><p>MIT LICENSE</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>不支持第一版本格式</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      V2Gen的使用说明
    
    </summary>
    
      <category term="MyApps" scheme="https://iochen.com/categories/MyApps/"/>
    
    
      <category term="V2Ray" scheme="https://iochen.com/tags/V2Ray/"/>
    
      <category term="V2Gen" scheme="https://iochen.com/tags/V2Gen/"/>
    
      <category term="Vmess" scheme="https://iochen.com/tags/Vmess/"/>
    
  </entry>
  
  <entry>
    <title>二进制辉光钟(DIY)</title>
    <link href="https://iochen.com/2020/01/19/binary-nixie-tube-clock/"/>
    <id>https://iochen.com/2020/01/19/binary-nixie-tube-clock/</id>
    <published>2020-01-19T02:39:11.000Z</published>
    <updated>2020-02-03T09:21:25.345Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><p>春节快递原因</p><p>To Be Continued…</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Make a binary nixie clock
    
    </summary>
    
      <category term="Circuits" scheme="https://iochen.com/categories/Circuits/"/>
    
    
      <category term="Circuit" scheme="https://iochen.com/tags/Circuit/"/>
    
      <category term="Nixie tube clock" scheme="https://iochen.com/tags/Nixie-tube-clock/"/>
    
      <category term="DIY" scheme="https://iochen.com/tags/DIY/"/>
    
  </entry>
  
  <entry>
    <title>GPG中创建ECC-512公私钥</title>
    <link href="https://iochen.com/2019/08/18/gen-ecc-512-gpg-keys/"/>
    <id>https://iochen.com/2019/08/18/gen-ecc-512-gpg-keys/</id>
    <published>2019-08-18T04:09:56.000Z</published>
    <updated>2020-01-12T03:46:26.897Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><p>此文章主要讲解</p><ul><li>如何在GPG中创建ECC-512公私钥</li><li>解决创建过程中的错误</li></ul><p>错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gpg: signing failed: Invalid length</span><br><span class="line">gpg: make_keysig_packet failed: Invalid length</span><br><span class="line">Key generation failed: Invalid length</span><br></pre></td></tr></table></figure><h1 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --expert --full-gen-key</span><br></pre></td></tr></table></figure><p>选择<code>ECC and ECC</code>以及加密方式 按提示输入即可</p><h1 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gpg: signing failed: Invalid length</span><br><span class="line">gpg: make_keysig_packet failed: Invalid length</span><br><span class="line">Key generation failed: Invalid length</span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>编辑<code>~/.gpg/gpg.conf</code>文件 修改（或添加）<code>cert-digest-algo</code>为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cert-digest-algo SHA256</span><br></pre></td></tr></table></figure><p></p><p>即可</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --&gt;&lt;p&gt;此文章主要讲解&lt;/p&gt;&lt;ul&gt;&lt;li&gt;如何在GPG中创建ECC-512公私钥&lt;/li&gt;&lt;li&gt;解决创建过程中的错误&lt;/li
      
    
    </summary>
    
      <category term="Crypto" scheme="https://iochen.com/categories/Crypto/"/>
    
      <category term="ECC" scheme="https://iochen.com/categories/Crypto/ECC/"/>
    
    
      <category term="ECC" scheme="https://iochen.com/tags/ECC/"/>
    
      <category term="非对称加密" scheme="https://iochen.com/tags/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/"/>
    
      <category term="GPG" scheme="https://iochen.com/tags/GPG/"/>
    
      <category term="PGP" scheme="https://iochen.com/tags/PGP/"/>
    
      <category term="ECC-512" scheme="https://iochen.com/tags/ECC-512/"/>
    
  </entry>
  
  <entry>
    <title>Linux 下的压缩，打包及解压操作</title>
    <link href="https://iochen.com/2019/08/18/zip-softwares-on-linux/"/>
    <id>https://iochen.com/2019/08/18/zip-softwares-on-linux/</id>
    <published>2019-08-18T03:27:43.000Z</published>
    <updated>2019-08-18T04:07:34.167Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><p>此文章将介绍 如何在Linux命令行下，压缩，解压，打包一个或多个文件<a id="more"></a></p><h1 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h1><h2 id="tar"><a href="#tar" class="headerlink" title=".tar"></a>.tar</h2><p>假设有一个文件（夹）<code>foo</code>,要打包为<code>archive.tar</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar cf archive.tar foo</span><br></pre></td></tr></table></figure><p></p><p>假设有多个文件（夹）<code>foo</code>和<code>bar</code> ,要打包为<code>archive.tar</code><br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar cf archive.tar foo bar</span><br></pre></td></tr></table></figure><p></p><h1 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h1><h2 id="tar-gz"><a href="#tar-gz" class="headerlink" title=".tar.gz"></a>.tar.gz</h2><p>假设有文件（夹）<code>foo</code>和<code>bar</code>,要压缩为<code>archive.tar.gz</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar cfz archive.tar.gz foo bar</span><br></pre></td></tr></table></figure><p></p><h2 id="tar-xz"><a href="#tar-xz" class="headerlink" title=".tar.xz"></a>.tar.xz</h2><p>假设有文件（夹）<code>foo</code>和<code>bar</code>,要压缩为<code>archive.tar.xz</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar cfz archive.tar.xz foo bar</span><br></pre></td></tr></table></figure><p></p><h2 id="zip"><a href="#zip" class="headerlink" title=".zip"></a>.zip</h2><p>假设有<strong>文件</strong><code>foo</code>和<code>bar</code>,要压缩为<code>archive.zip</code> (！！注意，不适用于文件夹！！)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip archive.zip foo bar</span><br></pre></td></tr></table></figure><p></p><p>假设有<strong>文件夹</strong><code>foo</code>和<code>bar</code>,要压缩为<code>archive.zip</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip -r archive.zip foo bar</span><br></pre></td></tr></table></figure><p></p><h2 id="7z"><a href="#7z" class="headerlink" title=".7z"></a>.7z</h2><p>假设有文件（夹）<code>foo</code>和<code>bar</code>,要压缩为<code>archive.7z</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7z a archive.7z foo bar</span><br></pre></td></tr></table></figure><p></p><h1 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h1><h2 id="tar-1"><a href="#tar-1" class="headerlink" title=".tar.*"></a>.tar.*</h2><p>解压/解包<code>.tar.*</code>文件，假设为<code>archive.tar.gz</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xf archive.tar.gz</span><br></pre></td></tr></table></figure><p></p><h2 id="7z-1"><a href="#7z-1" class="headerlink" title=".7z"></a>.7z</h2><p>解压<code>.7z</code>文件，假设为<code>archive.7z</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7z e archive.7z</span><br></pre></td></tr></table></figure><p></p><h2 id="zip-1"><a href="#zip-1" class="headerlink" title=".zip"></a>.zip</h2><p>解压<code>.zip</code>文件，假设为<code>archive.zip</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip archive.zip</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --&gt;&lt;p&gt;此文章将介绍 如何在Linux命令行下，压缩，解压，打包一个或多个文件
    
    </summary>
    
      <category term="Linux" scheme="https://iochen.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://iochen.com/tags/Linux/"/>
    
      <category term="zip" scheme="https://iochen.com/tags/zip/"/>
    
      <category term="7zip" scheme="https://iochen.com/tags/7zip/"/>
    
      <category term="gzip" scheme="https://iochen.com/tags/gzip/"/>
    
      <category term="tar" scheme="https://iochen.com/tags/tar/"/>
    
  </entry>
  
  <entry>
    <title>Linux下使用FFmpeg,将mp4等格式转mp3格式</title>
    <link href="https://iochen.com/2019/08/18/convert-videos-to-audio-on-linux/"/>
    <id>https://iochen.com/2019/08/18/convert-videos-to-audio-on-linux/</id>
    <published>2019-08-18T03:09:08.000Z</published>
    <updated>2020-02-03T10:06:06.019Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><p>本文章将介绍 Linux下使用FFmpeg,将各类格式互相转换，以及如何批量转换<a id="more"></a></p><h1 id="单个转换"><a href="#单个转换" class="headerlink" title="单个转换"></a>单个转换</h1><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i &#123;输入文件&#125; &#123;输出文件&#125;</span><br></pre></td></tr></table></figure><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="mp4-转-mp3"><a href="#mp4-转-mp3" class="headerlink" title="mp4 转 mp3"></a>mp4 转 mp3</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i foo.mp4 foobar.mp3</span><br></pre></td></tr></table></figure><h3 id="flv-转-mp3"><a href="#flv-转-mp3" class="headerlink" title="flv 转 mp3"></a>flv 转 mp3</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i foo.flv foobar.mp3</span><br></pre></td></tr></table></figure><h3 id="mp4-转-wav"><a href="#mp4-转-wav" class="headerlink" title="mp4 转 wav"></a>mp4 转 wav</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i foo.mp4 foobar.wav</span><br></pre></td></tr></table></figure><h3 id="wav-转-mp3"><a href="#wav-转-mp3" class="headerlink" title="wav 转 mp3"></a>wav 转 mp3</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i foo.wav foobar.mp3</span><br></pre></td></tr></table></figure><h1 id="批量转换"><a href="#批量转换" class="headerlink" title="批量转换"></a>批量转换</h1><p>比如，文件夹下有<code>*.mp4</code>文件，要批量转换为<code>XX.mp3</code>文件，可以用如下方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ./*.mp4</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">ffmpeg -i <span class="variable">$i</span> <span class="variable">$&#123;i&#125;</span>.mp3</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p></p><p>再比如，文件夹下所有文件文件，都要批量转换为<code>XX.mp3</code>文件，可以用如下方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ./*</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">ffmpeg -i <span class="variable">$i</span> <span class="variable">$&#123;i&#125;</span>.mp3</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      Linux下mp4等格式转mp3格式
    
    </summary>
    
      <category term="Apps" scheme="https://iochen.com/categories/Apps/"/>
    
      <category term="FFmpeg" scheme="https://iochen.com/categories/Apps/FFmpeg/"/>
    
    
      <category term="Linux" scheme="https://iochen.com/tags/Linux/"/>
    
      <category term="FFmpeg" scheme="https://iochen.com/tags/FFmpeg/"/>
    
  </entry>
  
  <entry>
    <title>出现 doveconf: Fatal: Error in ... ssl_cert: ... Can not open file: Permission denied 的解决办法</title>
    <link href="https://iochen.com/2019/07/01/dovecot-problem-solve/"/>
    <id>https://iochen.com/2019/07/01/dovecot-problem-solve/</id>
    <published>2019-07-01T03:15:45.000Z</published>
    <updated>2020-02-03T09:21:13.038Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><p>今天，在<strong>openSUSE Leap 15.0</strong>上配置<strong>dovecot</strong>的时候，出现了这个错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">doveconf: Fatal: Error in configuration file /etc/dovecot/dovecot.conf  line 7: ssl_cert: /etc/&#123;some path&#125; Can not open file: Permission  denied</span><br></pre></td></tr></table></figure><p>以下是我的解决办法</p><a id="more"></a><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>我的SSL证书是由<strong>certbot</strong>颁发的，在<code>/etc/certbot/...</code>下</p><h1 id="错误现象"><a href="#错误现象" class="headerlink" title="错误现象"></a>错误现象</h1><p><strong>systemed</strong>开启<strong>dovecot</strong>时，报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">doveconf: Fatal: Error in configuration file /etc/dovecot/dovecot.conf  line 7: ssl_cert: /etc/&#123;some path&#125; Can not open file: Permission  denied</span><br></pre></td></tr></table></figure><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>在<code>profiles/apparmor.d/abstractions/ssl_certs</code>中对应位置添加</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/certbot/archive<span class="comment">/*/cert*.pem r,</span></span><br><span class="line"><span class="comment">/etc/certbot/archive/*/</span>chain*.pem r,</span><br><span class="line">/etc/certbot/archive<span class="comment">/*/fullchain*.pem r,</span></span><br></pre></td></tr></table></figure><p>在<code>profiles/apparmor.d/abstractions/ssl_keys</code>对应位置添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/certbot/archive/*/privkey*.pem r,</span><br></pre></td></tr></table></figure><p>详细可参考</p><p><a href="https://gitlab.com/iochen/apparmor/commit/3016ffb3367e03ee2129401472d44d5eea4c1fb2" target="_blank" rel="noopener">https://gitlab.com/iochen/apparmor/commit/3016ffb3367e03ee2129401472d44d5eea4c1fb2</a></p><p><a href="https://gitlab.com/iochen/apparmor/commit/4d275bab696f58e1431d26da642e82adbe092526" target="_blank" rel="noopener">https://gitlab.com/iochen/apparmor/commit/4d275bab696f58e1431d26da642e82adbe092526</a></p><h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><p>已在<a href="https://gitlab.com/apparmor/apparmor" target="_blank" rel="noopener">apparmor官方仓库</a>中提出<a href="https://gitlab.com/apparmor/apparmor/merge_requests/397" target="_blank" rel="noopener">PR</a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://forums.opensuse.org/showthread.php/531740-Unexpected-permissions-issue-with-Dovecot" target="_blank" rel="noopener">LEAP 42.3 Unexpected permissions issue with Dovecot</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --&gt;&lt;p&gt;今天，在&lt;strong&gt;openSUSE Leap 15.0&lt;/strong&gt;上配置&lt;strong&gt;dovecot&lt;/strong&gt;的时候，出现了这个错误：&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;doveconf: Fatal: Error in configuration file /etc/dovecot/dovecot.conf  line 7: ssl_cert: /etc/&amp;#123;some path&amp;#125; Can not open file: Permission  denied&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;以下是我的解决办法&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://iochen.com/categories/Linux/"/>
    
      <category term="openSUSE" scheme="https://iochen.com/categories/Linux/openSUSE/"/>
    
    
      <category term="openSUSE" scheme="https://iochen.com/tags/openSUSE/"/>
    
      <category term="server" scheme="https://iochen.com/tags/server/"/>
    
      <category term="dovecot" scheme="https://iochen.com/tags/dovecot/"/>
    
      <category term="error" scheme="https://iochen.com/tags/error/"/>
    
      <category term="solve" scheme="https://iochen.com/tags/solve/"/>
    
  </entry>
  
  <entry>
    <title>Linux上SD卡问题的解决</title>
    <link href="https://iochen.com/2019/01/31/solved-problem-about-SD-card-formart-on-Linux/"/>
    <id>https://iochen.com/2019/01/31/solved-problem-about-SD-card-formart-on-Linux/</id>
    <published>2019-01-31T04:40:13.000Z</published>
    <updated>2020-02-03T09:20:34.337Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><p>这篇文章主要会写Linux下格式化SD卡后，一些设备无法识别的问题。</p><a id="more"></a><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>今天我把我SD卡格式化了一下，发现插上我的德生收音机后无法识别使用，开始我以为Linux文件系统有问题，换了一堆格式化的应用，最终依旧是无法识别。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>在我不断的折腾后，我终于找到了解决方案：</p><ol><li>如果已挂载，请先卸载磁盘。</li><li>先<strong>建立分区表</strong>，如果是（比如我）非精通人士，建议使用<strong>gParted</strong>软件（<strong>zypper</strong>可直接安装）。</li><li><p>建立好后，<strong>再建立主分区</strong>，格式化为你想要的格式，建议再设一个卷名。</p><p>（<strong>gParted</strong>的话别忘了点击右上角的应用，否则是不会格式化的。） 至此，已完成！</p></li></ol><h1 id="附"><a href="#附" class="headerlink" title="附"></a>附</h1><p><strong>gParted</strong>是Linux上 我认为比较好磁盘管理软件(GUI)，可能会专出一篇凑凑我的博客数。</p><p>写本次文章的目的只是把博客底部的2018更新到2019 :)</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --&gt;&lt;p&gt;这篇文章主要会写Linux下格式化SD卡后，一些设备无法识别的问题。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://iochen.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://iochen.com/tags/Linux/"/>
    
      <category term="openSUSE" scheme="https://iochen.com/tags/openSUSE/"/>
    
      <category term="Problem Solve" scheme="https://iochen.com/tags/Problem-Solve/"/>
    
      <category term="SD Card" scheme="https://iochen.com/tags/SD-Card/"/>
    
      <category term="gParted" scheme="https://iochen.com/tags/gParted/"/>
    
  </entry>
  
  <entry>
    <title>基于CentOS 7,使用Postfix &amp; Dovecot搭建邮件服务器 -Part 2</title>
    <link href="https://iochen.com/2018/07/27/install-email-service-on-CentOS-7-part-2-dovecot/"/>
    <id>https://iochen.com/2018/07/27/install-email-service-on-CentOS-7-part-2-dovecot/</id>
    <published>2018-07-27T12:54:21.000Z</published>
    <updated>2020-02-03T09:21:01.819Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><p>本文将详细讲解 如何在CentOS 7下，使用Postfix &amp; Dovecot 搭建自己的邮件服务器。<br>这是第二部分: Dovecot 与 其它优化。</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在我自己搭建的时候，看了许多网络教程，但博主自己在实现过程中遇到了许多坑，比如教程本身有问题，讲解不明等，所以在此自己写一篇。</p><p>关于<strong>Postfix</strong>及前面内容(Part 1),<br><strong>链接在此 -&gt; <a href="/2018/07/21/install-email-service-on-CentOS-7-part-1-postfix/">基于CentOS 7,使用Postfix &amp; Dovecot搭建邮件服务器 -Part 1</a></strong></p><h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><h2 id="变量设定"><a href="#变量设定" class="headerlink" title="变量设定"></a><strong>变量设定</strong></h2><font color="red">重要!!!<br><strong>假如你的IP为<code>8.8.8.8</code>, 域名为<code>example.com</code>, 你想要创建的邮箱为<code>xxx@example.com</code></strong><br><strong>证书, 密钥请点此 -&gt;</strong> <a href="/2018/07/21/install-email-service-on-CentOS-7-part-1-postfix/#签发证书"><strong>证书路径</strong></a></font><h2 id="Dovecot"><a href="#Dovecot" class="headerlink" title="Dovecot"></a>Dovecot</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum -y install dovecot</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>编辑<code>/etc/dovecot/dovecot.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 第24行 : 取消注释并修改</span><br><span class="line">protocols = imap pop3 lmtp</span><br><span class="line"># 第30行: 取消注释并修改</span><br><span class="line">listen = *, ::</span><br></pre></td></tr></table></figure><p></p><p>编辑<code>/etc/dovecot/conf.d/10-auth.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 第10行: 取消注释并修改</span><br><span class="line">disable_plaintext_auth = yes</span><br><span class="line"># 第100行: 修改</span><br><span class="line">auth_mechanisms = plain login</span><br></pre></td></tr></table></figure><p></p><p>编辑<code>/etc/dovecot/conf.d/10-mail.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 第30行: 取消注释并修改</span><br><span class="line">mail_location = maildir:~/Mailbox</span><br></pre></td></tr></table></figure><p></p><p>编辑<code>/etc/dovecot/conf.d/10-master.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 第89~93行: 全部注释!!!</span><br><span class="line"># unix_listener auth-userdb &#123;</span><br><span class="line">   #mode = 0666</span><br><span class="line">   #user =</span><br><span class="line">   #group =</span><br><span class="line"># &#125;</span><br><span class="line"></span><br><span class="line"># 第96~98行: 取消注释并修改</span><br><span class="line">unix_listener /var/spool/postfix/private/auth &#123;</span><br><span class="line">    mode = 0666</span><br><span class="line">    user = postfix</span><br><span class="line">    group = postfix</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>编辑<code>/etc/dovecot/conf.d/10-ssl.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 第8行: 修改</span><br><span class="line">ssl = required</span><br><span class="line"></span><br><span class="line"># 第14~15行: 取消注释并修改,注意替换路径!!! 路径见本文前面 变量设定 部分</span><br><span class="line">ssl_cert = &lt;/etc/letsencrypt/live/mail.example.com/cert.pem</span><br><span class="line">ssl_key = &lt;/etc/letsencrypt/live/mail.example.com/privkey.pem</span><br></pre></td></tr></table></figure><p></p><h3 id="重启Dovecot"><a href="#重启Dovecot" class="headerlink" title="重启Dovecot"></a>重启Dovecot</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl restart dovecot &amp;&amp; sudo systemctl <span class="built_in">enable</span> dovecot</span><br></pre></td></tr></table></figure><h2 id="firewall相应配置"><a href="#firewall相应配置" class="headerlink" title="firewall相应配置"></a>firewall相应配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo firewall-cmd --add-port=&#123;110/tcp,143/tcp,995/tcp,993/tcp&#125; --permanent &amp;&amp; sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>110/tcp</strong>为<strong>POP3</strong>端口, <strong>143/tcp</strong>为<strong>IMAP</strong>端口, <strong>995/tcp</strong>为<strong>POP3S</strong>端口, <strong>993/tcp</strong>为<strong>IMAPS</strong>端口</p><h1 id="检验"><a href="#检验" class="headerlink" title="检验"></a>检验</h1><p>假设你的Linux服务器中, 你的用户名为<code>user</code>, 则可按下方配置操作: <img src="/img/install-email-service-on-CentOS-7-part-2-dovecot/68eee113-65c4-4cd9-9347-1b1cf2c608e8.png" alt="email for user"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/wh211212/article/details/53040620" target="_blank" rel="noopener">CentOS 7.2 部署邮件服务器（Postfix）</a><em>注:作者未注明许可协议</em><br><a href="http://lomu.me/post/SPF-DKIM-DMARC-PTR" target="_blank" rel="noopener">邮件服务器添加SPF、DKIM、DMARC、PTR提高送达率 </a><em>注:作者未注明许可协议</em> <em>注:此链接未使用HTTPS</em></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --&gt;&lt;p&gt;本文将详细讲解 如何在CentOS 7下，使用Postfix &amp;amp; Dovecot 搭建自己的邮件服务器。&lt;br&gt;这是第二部分: Dovecot 与 其它优化。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://iochen.com/categories/Linux/"/>
    
      <category term="CentOS" scheme="https://iochen.com/categories/Linux/CentOS/"/>
    
    
      <category term="Linux" scheme="https://iochen.com/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://iochen.com/tags/CentOS/"/>
    
      <category term="Postfix" scheme="https://iochen.com/tags/Postfix/"/>
    
      <category term="Dovecot" scheme="https://iochen.com/tags/Dovecot/"/>
    
      <category term="邮件服务器" scheme="https://iochen.com/tags/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="自建邮件服务器" scheme="https://iochen.com/tags/%E8%87%AA%E5%BB%BA%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="DKIM" scheme="https://iochen.com/tags/DKIM/"/>
    
      <category term="SPF记录" scheme="https://iochen.com/tags/SPF%E8%AE%B0%E5%BD%95/"/>
    
      <category term="PTR记录" scheme="https://iochen.com/tags/PTR%E8%AE%B0%E5%BD%95/"/>
    
      <category term="DMARC记录" scheme="https://iochen.com/tags/DMARC%E8%AE%B0%E5%BD%95/"/>
    
      <category term="MX记录" scheme="https://iochen.com/tags/MX%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>基于CentOS 7,使用Postfix &amp; Dovecot搭建邮件服务器 -Part 1</title>
    <link href="https://iochen.com/2018/07/21/install-email-service-on-CentOS-7-part-1-postfix/"/>
    <id>https://iochen.com/2018/07/21/install-email-service-on-CentOS-7-part-1-postfix/</id>
    <published>2018-07-21T11:52:16.000Z</published>
    <updated>2020-02-03T09:19:45.933Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><p>本文将详细讲解 如何在CentOS 7下，使用Postfix &amp; Dovecot 搭建自己的邮件服务器。<br>这是第一部分: Postfix 与 DNS各种记录。<a id="more"></a></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在我自己搭建的时候，看了许多网络教程，但博主自己在实现过程中遇到了许多坑，比如教程本身有问题，讲解不明等，所以在此自己写一篇。</p><h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><h2 id="变量设定"><a href="#变量设定" class="headerlink" title="变量设定"></a><strong>变量设定</strong></h2><font color="red">重要!!!<br><strong>假如你的IP为<code>8.8.8.8</code>, 域名为<code>example.com</code>, 你想要创建的邮箱为<code>xxx@example.com</code></strong></font><h2 id="DNS记录"><a href="#DNS记录" class="headerlink" title="DNS记录"></a>DNS记录</h2><h3 id="必要记录"><a href="#必要记录" class="headerlink" title="必要记录"></a>必要记录</h3><table><thead><tr><th style="text-align:center">名称(Name)</th><th style="text-align:center">记录类型(Type)</th><th style="text-align:center">记录内容(Value)</th><th style="text-align:center">注</th></tr></thead><tbody><tr><td style="text-align:center"><code>mail</code></td><td style="text-align:center">A</td><td style="text-align:center"><code>8.8.8.8</code></td><td style="text-align:center">/</td></tr><tr><td style="text-align:center"><code>@</code></td><td style="text-align:center">MX</td><td style="text-align:center"><code>mail.example.com</code></td><td style="text-align:center">优先级(Priority)为 <code>10</code></td></tr></tbody></table><h3 id="选填记录"><a href="#选填记录" class="headerlink" title="选填记录"></a>选填记录</h3><p>变量假设: 你的邮箱为<code>i@example.com</code></p><table><thead><tr><th style="text-align:center">名称(Name)</th><th style="text-align:center">记录类型(Type)</th><th style="text-align:center">记录内容(Value)</th><th style="text-align:center">注</th></tr></thead><tbody><tr><td style="text-align:center"><code>@</code></td><td style="text-align:center">TXT</td><td style="text-align:center"><code>v=spf1 mx ~all</code></td><td style="text-align:center"><a href="#SPF记录">见下</a></td></tr><tr><td style="text-align:center"><code>_dmarc</code></td><td style="text-align:center">TXT</td><td style="text-align:center"><code>v=DMARC1;p=reject;rua=i@example.com</code></td><td style="text-align:center"><a href="#DMARC记录">见下</a></td></tr></tbody></table><h4 id="SPF记录"><a href="#SPF记录" class="headerlink" title="SPF记录"></a>SPF记录</h4><p><strong>SPF记录</strong>可确定允许哪些IP 使用你的域名 来发送电子邮件。<br>SPF的设置选项可以参考：<a href="http://www.openspf.org/SPFRecordSyntax" target="_blank" rel="noopener">SPF Record Syntax</a> <em>注:此链接未使用HTTPS</em><br>部分如下：<br><code>a</code>：所有该域名的<strong>A记录</strong>都为通过，a不指定的情况下为当前域名<br><code>ip4</code>：指定通过的IPv4地址<br><code>mx</code>：mx记录域名的A记录IP可以发邮件<br><code>all</code>：指其它IP该作何处理，<code>-</code>表示<strong>拒绝</strong>，<code>~</code>表示<strong>软拒绝</strong>，<code>+</code>表示<strong>通过</strong><br>这里的<code>v=spf1 mx ~all</code>，则表示允许MX记录的IP收发邮件,软拒绝其它IP发来的邮件。</p><h4 id="DMARC记录"><a href="#DMARC记录" class="headerlink" title="DMARC记录"></a>DMARC记录</h4><p><strong>DMARC协议</strong>是有效解决信头From伪造而诞生的一种新的邮件来源验证手段，为邮件发件人地址提供强大保护，并在邮件收发双方之间建立起一个数据反馈机制。<br>具体信息可以看这里：<a href="https://dmarc.org/overview/" target="_blank" rel="noopener">DMARC Overview</a>。<br><strong>DMARC记录</strong>中常用的参数解释:<br><code>p</code>：用于告知收件方，当检测到某邮件存在伪造我（发件人）的情况，收件方要做出什么处理，处理方式从轻到重依次为：<code>none</code>为不作任何处理；<code>quarantine</code>为将邮件标记为垃圾邮件；<code>reject</code>为拒绝该邮件。<br><code>rua</code>：用于在收件方检测后，将一段时间的汇总报告，发送到哪个邮箱地址。<br><code>ruf</code>：用于当检测到伪造邮件时，收件方须将该伪造信息的报告发送到哪个邮箱地址。<br>例如我设置的是<code>v=DMARC1;p=reject;rua=i@example.com</code>，意思是拒绝伪造邮件，并且将一段时间的汇总报告发送给<a href="mailto:`i@example.com" target="_blank" rel="noopener">`i@example.com</a>`。</p><h2 id="证书签发"><a href="#证书签发" class="headerlink" title="证书签发"></a>证书签发</h2><p>这里使用<strong>Certbot</strong></p><h3 id="安装Certbot"><a href="#安装Certbot" class="headerlink" title="安装Certbot"></a>安装Certbot</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum -y install yum-utils</span><br><span class="line">$ sudo yum-config-manager --<span class="built_in">enable</span> rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional</span><br><span class="line">$ sudo yum install certbot</span><br></pre></td></tr></table></figure><h3 id="签发证书"><a href="#签发证书" class="headerlink" title="签发证书"></a>签发证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo certbot certonly -d mail.example.com</span><br></pre></td></tr></table></figure><p>看提示, 使用<strong>root用户</strong>登录, 在提示的目录下会有<code>cert.pem</code> <code>chain.pem</code> <code>fullchain.pem</code> <code>privkey.pem</code><br>博主这些文件的所在目录是<code>/etc/letsencrypt/live/mail.example.com/</code><br>那么<strong>证书文件</strong>就是<code>/etc/letsencrypt/live/mail.example.com/cert.pem</code><br><strong>密钥文件</strong>是<code>/etc/letsencrypt/live/mail.example.com/privkey.pem</code><br>下文请注意替换!!!</p><h2 id="Postfix"><a href="#Postfix" class="headerlink" title="Postfix"></a>Postfix</h2><h3 id="安装Postfix"><a href="#安装Postfix" class="headerlink" title="安装Postfix"></a>安装Postfix</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum -y install postfix</span><br></pre></td></tr></table></figure><h3 id="配置Postfix"><a href="#配置Postfix" class="headerlink" title="配置Postfix"></a>配置Postfix</h3><p>编辑<code>/etc/postfix/main.cf</code>文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"># 第75行: 取消注释并修改</span><br><span class="line">myhostname = mail.example.com</span><br><span class="line"></span><br><span class="line"># 第83行: 取消注释并修改</span><br><span class="line">mydomain = example.com</span><br><span class="line"></span><br><span class="line"># 第99行: 取消注释并修改</span><br><span class="line">myorigin = $mydomain</span><br><span class="line"></span><br><span class="line"># 第116行: 修改</span><br><span class="line">inet_interfaces = all</span><br><span class="line"></span><br><span class="line"># 第164行: 添加</span><br><span class="line">mydestination = $myhostname, localhost.$mydomain, localhost, $mydomain</span><br><span class="line"></span><br><span class="line"># 第264行: 取消注释并修改为你的内网(就填下面的一般也行)</span><br><span class="line">mynetworks = 127.0.0.0/8, 10.0.0.0/24</span><br><span class="line"></span><br><span class="line"># 第419行: 修改</span><br><span class="line">home_mailbox = Mailbox/</span><br><span class="line"></span><br><span class="line"># 第574行: 添加</span><br><span class="line">smtpd_banner = $myhostname ESMTP</span><br><span class="line"></span><br><span class="line"># 把下面的内容添加到最后</span><br><span class="line"># 限制邮件大小为10M</span><br><span class="line">message_size_limit = 10485760</span><br><span class="line"># 限制邮箱大小为1G</span><br><span class="line">mailbox_size_limit = 1073741824</span><br><span class="line"># SMTP验证用内容 (为接下来的Dovecot做准备)</span><br><span class="line">smtpd_sasl_type = dovecot</span><br><span class="line">smtpd_sasl_path = private/auth</span><br><span class="line">smtpd_sasl_auth_enable = yes</span><br><span class="line">smtpd_sasl_security_options = noanonymous</span><br><span class="line">smtpd_sasl_local_domain = $myhostname</span><br><span class="line">smtpd_recipient_restrictions = permit_mynetworks,permit_auth_destination,permit_sasl_authenticated,reject</span><br><span class="line"># TLS/SSL内容, 注意替换路径!!!</span><br><span class="line">smtpd_use_tls = yes</span><br><span class="line">smtpd_tls_cert_file = /etc/letsencrypt/live/mail.example.com/cert.pem</span><br><span class="line">smtpd_tls_key_file = /etc/letsencrypt/live/mail.example.com/privkey.pem</span><br><span class="line">smtpd_tls_session_cache_database = btree:/etc/postfix/smtpd_scache</span><br></pre></td></tr></table></figure><p></p><p>编辑<code>/etc/postfix/master.cf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 第26~28行: 取消注释</span><br><span class="line">smtps       inet   n       -       n       -       -       smtpd</span><br><span class="line">  -o syslog_name=postfix/smtps</span><br><span class="line">  -o smtpd_tls_wrappermode=yes</span><br></pre></td></tr></table></figure><p></p><h3 id="重启Postfix并开机自启"><a href="#重启Postfix并开机自启" class="headerlink" title="重启Postfix并开机自启"></a>重启Postfix并开机自启</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl restart postfix &amp;&amp; sudo systemctl <span class="built_in">enable</span> postfix</span><br></pre></td></tr></table></figure><h3 id="firewall相应配置"><a href="#firewall相应配置" class="headerlink" title="firewall相应配置"></a>firewall相应配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo firewall-cmd --add-port=&#123;25/tcp,465/tcp&#125; --permanent &amp;&amp; sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>25/tcp</strong>为<strong>SMTP</strong>端口, <strong>465/tcp</strong>为<strong>SMTPS</strong>端口<br>注: 可能部分VPS未开放25端口, 请与VPS提供商联系!</p><h2 id="DKIM"><a href="#DKIM" class="headerlink" title="DKIM"></a>DKIM</h2><p><strong>DomainKeys Identified Mail</strong>的缩写，域名密钥识别邮件标准。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="下载安装EPEL"><a href="#下载安装EPEL" class="headerlink" title="下载安装EPEL"></a>下载安装EPEL</h4><p>64 bit:<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rpm -Uvh http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</span><br></pre></td></tr></table></figure><p></p><p>32 bit:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm</span><br></pre></td></tr></table></figure><p></p><h4 id="安装opendkim"><a href="#安装opendkim" class="headerlink" title="安装opendkim"></a>安装opendkim</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install opendkim</span><br></pre></td></tr></table></figure><h3 id="生成DKIM-key-注意修改域名"><a href="#生成DKIM-key-注意修改域名" class="headerlink" title="生成DKIM key (注意修改域名)"></a>生成DKIM key (注意修改域名)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> domain=example.com</span><br></pre></td></tr></table></figure><p>接下来请以root用户运行!!!<br></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir /etc/opendkim/keys/<span class="variable">$domain</span></span><br><span class="line">$ <span class="built_in">cd</span> /etc/opendkim/keys/<span class="variable">$domain</span></span><br><span class="line">$ opendkim-genkey -d <span class="variable">$domain</span> -s default</span><br><span class="line">$ chown -R opendkim:opendkim /etc/opendkim/keys/<span class="variable">$domain</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"default._domainkey.<span class="variable">$domain</span> <span class="variable">$domain</span>:default:/etc/opendkim/keys/<span class="variable">$domain</span>/default.private"</span> &gt;&gt; /etc/opendkim/KeyTable</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"*@<span class="variable">$domain</span> default._domainkey.<span class="variable">$domain</span>"</span> &gt;&gt; /etc/opendkim/SigningTable</span><br></pre></td></tr></table></figure><p></p><p>生成之后打开<code></code>/etc/opendkim/keys/example.com/default.txt<code>，里面就是DKIM key，需要添加到DNS，主机记录为</code>default._domainkey`，记录值为括号里面的（去掉引号,换行）,<br>例如:</p><table><thead><tr><th style="text-align:center">名称(Name)</th><th style="text-align:center">记录类型(Type)</th><th style="text-align:center">记录内容(Value)</th><th style="text-align:center">注</th></tr></thead><tbody><tr><td style="text-align:center"><code>default._domainkey</code></td><td style="text-align:center">TXT</td><td style="text-align:center"><code>v=DKIM1; k=rsa; p=...</code></td><td style="text-align:center">/</td></tr></tbody></table><h3 id="修改openDKIM配置"><a href="#修改openDKIM配置" class="headerlink" title="修改openDKIM配置"></a>修改openDKIM配置</h3><p>编辑<code>/etc/opendkim.conf</code></p><ol><li>将<code>Mode</code> 改为 <code>Mode sv</code></li><li>将<code>Domain</code> 改为 <code>Domain example.com</code> (注意替换)</li><li>将所有变量前面的#去掉，但是<code>KeyFile</code>,<code>Statistics</code>,<code>ReportAddress</code>加上<code>#</code></li><li>再把<code>SigningTable /etc/opendkim/SigningTable</code>改成<code>SigningTable refile:/etc/opendkim/SigningTable</code></li></ol><h3 id="设置Postfix"><a href="#设置Postfix" class="headerlink" title="设置Postfix"></a>设置Postfix</h3><p>编辑<code>/etc/postfix/main.cf</code><br>加上下面几行<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># opendkim 配置</span><br><span class="line">smtpd_milters = inet:127.0.0.1:8891</span><br><span class="line">non_smtpd_milters = inet:127.0.0.1:8891</span><br><span class="line">milter_default_action = accept</span><br></pre></td></tr></table></figure><p></p><h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl restart postfix opendkim &amp;&amp; sudo systemctl <span class="built_in">enable</span> opendkim</span><br></pre></td></tr></table></figure><p>P.S.: 第一次启动如果出现<code>Generating default DKIM keys: hostname: Unknown host</code> 可以在 <code>/etc/hosts</code> 上面加上域名，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 example.com localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br></pre></td></tr></table></figure><p></p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>这里将<strong>SMTP(S)</strong>, 即发件服务配置好了, 关于<strong>Dovecot</strong>及后续内容(Part 2),<br><strong>链接在此 -&gt; <a href="/2018/07/27/install-email-service-on-CentOS-7-part-2-dovecot/">基于CentOS 7,使用Postfix &amp; Dovecot搭建邮件服务器 -Part 2</a></strong></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/wh211212/article/details/53040620" target="_blank" rel="noopener">CentOS 7.2 部署邮件服务器（Postfix）</a><em>注:作者未注明许可协议</em><br><a href="http://lomu.me/post/SPF-DKIM-DMARC-PTR" target="_blank" rel="noopener">邮件服务器添加SPF、DKIM、DMARC、PTR提高送达率 </a><em>注:作者未注明许可协议</em> <em>注:此链接未使用HTTPS</em></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --&gt;&lt;p&gt;本文将详细讲解 如何在CentOS 7下，使用Postfix &amp;amp; Dovecot 搭建自己的邮件服务器。&lt;br&gt;这是第一部分: Postfix 与 DNS各种记录。
    
    </summary>
    
      <category term="Linux" scheme="https://iochen.com/categories/Linux/"/>
    
      <category term="CentOS" scheme="https://iochen.com/categories/Linux/CentOS/"/>
    
    
      <category term="Linux" scheme="https://iochen.com/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://iochen.com/tags/CentOS/"/>
    
      <category term="Postfix" scheme="https://iochen.com/tags/Postfix/"/>
    
      <category term="Dovecot" scheme="https://iochen.com/tags/Dovecot/"/>
    
      <category term="邮件服务器" scheme="https://iochen.com/tags/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="自建邮件服务器" scheme="https://iochen.com/tags/%E8%87%AA%E5%BB%BA%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="DKIM" scheme="https://iochen.com/tags/DKIM/"/>
    
      <category term="SPF记录" scheme="https://iochen.com/tags/SPF%E8%AE%B0%E5%BD%95/"/>
    
      <category term="PTR记录" scheme="https://iochen.com/tags/PTR%E8%AE%B0%E5%BD%95/"/>
    
      <category term="DMARC记录" scheme="https://iochen.com/tags/DMARC%E8%AE%B0%E5%BD%95/"/>
    
      <category term="MX记录" scheme="https://iochen.com/tags/MX%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>nginx配置HTTPS并取得A+</title>
    <link href="https://iochen.com/2018/07/11/get-A-plus-on-https-by-using-nginx/"/>
    <id>https://iochen.com/2018/07/11/get-A-plus-on-https-by-using-nginx/</id>
    <published>2018-07-11T11:25:20.000Z</published>
    <updated>2020-02-03T10:06:20.471Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><p>主要是我自己的nginx配置, 并且HTTPS取得<strong>A+</strong>.</p><a id="more"></a><p>先来展示一下:</p><p><img src="/img/get-A-plus-on-https-by-using-nginx/58b2543b-5fc7-43a3-9473-f30cf6218ced.png" alt="58b2543b-5fc7-43a3-9473-f30cf6218ced"></p><h1 id="直接上配置"><a href="#直接上配置" class="headerlink" title="直接上配置!"></a>直接上配置!</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">listen</span> [::]:<span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> domain.ltd; <span class="comment"># 你的域名</span></span><br><span class="line">    <span class="attribute">return</span> <span class="number">301</span> https://domain.ltd<span class="variable">$request_uri</span>; <span class="comment"># 你的域名</span></span><br><span class="line">    <span class="attribute">error_page</span> <span class="number">497</span> =<span class="number">301</span> https://domain.ltd<span class="variable">$request_uri</span>; <span class="comment"># 你的域名</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span>  ssl http2;</span><br><span class="line">    <span class="attribute">listen</span> [::]:<span class="number">443</span>  ssl http2;</span><br><span class="line">    <span class="attribute">server_name</span> domain.ltd; <span class="comment"># 你的域名</span></span><br><span class="line">    <span class="attribute">add_header</span> Strict-Transport-Security <span class="string">"max-age=63072000; includeSubDomains; preload"</span>;</span><br><span class="line">    <span class="attribute">ssl</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/certificate_path/file.pem ; <span class="comment"># 你的证书路径</span></span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/certificate_key_path/file.pem ; <span class="comment"># 你的证书key路径</span></span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1.<span class="number">3</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">ssl_stapling</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span> <span class="string">"ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA"</span>;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">ssl_session_cache</span> shared:SSL:<span class="number">10m</span>;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">10m</span>;</span><br><span class="line">    <span class="attribute">ssl_dhparam</span> /etc/myssl/dhparam.pem; <span class="comment"># 你的DH证书路径,下面会说</span></span><br><span class="line">    <span class="attribute">charset</span> utf-<span class="number">8</span>;</span><br><span class="line">    <span class="attribute">access_log</span>  /var/log/nginx/access.log; <span class="comment"># 可自行修改</span></span><br><span class="line">    <span class="attribute">error_log</span>   /var/log/nginx/error.log; <span class="comment"># 可自行修改</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">         <span class="attribute">root</span>   /usr/share/nginx/path; <span class="comment"># 你的网站根目录</span></span><br><span class="line">         <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$uri</span>;</span><br><span class="line">         <span class="attribute">index</span>  index.php index.html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ERROR pages</span></span><br><span class="line">    <span class="attribute">error_page</span>  <span class="number">404</span>        /<span class="number">404</span>.html;</span><br><span class="line">    <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">    <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">        <span class="attribute">root</span>   /usr/share/nginx/path; <span class="comment"># 你的网站根目录</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># GZIP</span></span><br><span class="line">    <span class="attribute">gzip</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">gzip_min_length</span> <span class="number">1k</span>;</span><br><span class="line">    <span class="attribute">gzip_comp_level</span> <span class="number">2</span>;</span><br><span class="line">    <span class="attribute">gzip_types</span> text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png image/jpg;</span><br><span class="line">    <span class="attribute">gzip_vary</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">gzip_disable</span> <span class="string">"MSIE [1-6]\."</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># PHP</span></span><br><span class="line">    <span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">        <span class="attribute">root</span>           html;</span><br><span class="line">        <span class="attribute">fastcgi_pass</span>   <span class="number">127.0.0.1:9000</span>;</span><br><span class="line">        <span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line">        <span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME /usr/share/nginx/path/<span class="variable">$fastcgi_script_name</span>; <span class="comment"># 你的网站根目录</span></span><br><span class="line">        <span class="attribute">include</span>        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="必要修改-amp-amp-说明"><a href="#必要修改-amp-amp-说明" class="headerlink" title="必要修改&amp;&amp;说明"></a>必要修改&amp;&amp;说明</h1><h2 id="必要替换"><a href="#必要替换" class="headerlink" title="必要替换:"></a>必要替换:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">domain.ltd    =&gt; 你的域名</span><br><span class="line">/etc/certificate_path/file.pem    =&gt; 你的证书路径</span><br><span class="line">/etc/certificate_key_path/file.pem    =&gt; 你的证书key路径</span><br><span class="line">/etc/myssl/dhparam.pem    =&gt; 你的DH证书路径,下面会说</span><br><span class="line">/usr/share/nginx/path    =&gt; 你的网站文件根目录</span><br></pre></td></tr></table></figure><h2 id="个别说明"><a href="#个别说明" class="headerlink" title="个别说明"></a>个别说明</h2><p>DH证书: 请先安装<code>openssl</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl dhparam -dsaparam -out dhparam.pem 4096</span><br></pre></td></tr></table></figure><p></p><p>建议使用<strong>nohup</strong>,生成会花费一定时间.<br><a href="#nohup"><em>nohup ?</em></a></p><h1 id="附"><a href="#附" class="headerlink" title="附"></a>附</h1><h2 id="nohup"><a href="#nohup" class="headerlink" title="nohup"></a>nohup</h2><p>nohup使用:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nohup [应该的命令] &amp;</span><br></pre></td></tr></table></figure><p></p><p>会将屏幕输出内容存放在本地目录下<code>nohup.out</code>文件内</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --&gt;&lt;p&gt;主要是我自己的nginx配置, 并且HTTPS取得&lt;strong&gt;A+&lt;/strong&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="Apps" scheme="https://iochen.com/categories/Apps/"/>
    
      <category term="nginx" scheme="https://iochen.com/categories/Apps/nginx/"/>
    
    
      <category term="Linux" scheme="https://iochen.com/tags/Linux/"/>
    
      <category term="server" scheme="https://iochen.com/tags/server/"/>
    
      <category term="nginx" scheme="https://iochen.com/tags/nginx/"/>
    
      <category term="HTTPS" scheme="https://iochen.com/tags/HTTPS/"/>
    
      <category term="safe" scheme="https://iochen.com/tags/safe/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7防火墙的使用</title>
    <link href="https://iochen.com/2018/06/02/firewall-of-CentOS/"/>
    <id>https://iochen.com/2018/06/02/firewall-of-CentOS/</id>
    <published>2018-06-02T10:28:52.000Z</published>
    <updated>2018-08-17T12:09:07.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><p>记录<strong>CentOS7</strong>下<strong>firewall(firewalld)</strong>的用法，包括<em>开启</em>、<em>关闭</em>、<em>查看</em>等操作。<a id="more"></a></p><h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><p>直接上命令</p><h2 id="开启"><a href="#开启" class="headerlink" title="开启"></a>开启</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo firewall-cmd --zone=public  --add-port=80/tcp --permanent</span><br></pre></td></tr></table></figure><p><a href="#重启"><em>注：执行此条命令后不会立即生效，请参阅此处</em></a><br>这里是开启<strong>TCP</strong>的<strong>80</strong>端口，下方是详解<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--zone=public 操作的域  </span><br><span class="line">--add-port=80/tcp 要开启的端口，格式为`端口/协议`  </span><br><span class="line">--permanent 指的是永久生效，去除即临时生效</span><br></pre></td></tr></table></figure><p></p><h2 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo firewall-cmd --remove-port=80/tcp --permanent</span><br></pre></td></tr></table></figure><p><a href="#重启"><em>注：执行此条命令后不会立即生效，请参阅此处</em></a><br>这里是关闭<strong>TCP</strong>的<strong>80</strong>端口，下方是详解<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--zone=public 操作的域  </span><br><span class="line">--remove-port=80/tcp 要开启的端口，格式为`端口/协议`  </span><br><span class="line">--permanent 指的是永久生效，去除即临时生效</span><br></pre></td></tr></table></figure><p></p><h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo firewall-cmd --list-ports</span><br></pre></td></tr></table></figure><h2 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><h1 id="启用or关闭firewall-firewalld-服务"><a href="#启用or关闭firewall-firewalld-服务" class="headerlink" title="启用or关闭firewall(firewalld)服务"></a>启用or关闭<strong>firewall(firewalld)</strong>服务</h1><h2 id="关闭-1"><a href="#关闭-1" class="headerlink" title="关闭"></a>关闭</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><h2 id="开启-1"><a href="#开启-1" class="headerlink" title="开启"></a>开启</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl start firewalld.service</span><br></pre></td></tr></table></figure><h2 id="重启-1"><a href="#重启-1" class="headerlink" title="重启"></a>重启</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl restart firewalld.service</span><br></pre></td></tr></table></figure><h2 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl status firewalld.service</span><br></pre></td></tr></table></figure><p>我自己的示例(开启状态): <img src="https://img.iochen.com/AJ5Ssm0L.png" alt=""></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --&gt;&lt;p&gt;记录&lt;strong&gt;CentOS7&lt;/strong&gt;下&lt;strong&gt;firewall(firewalld)&lt;/strong&gt;的用法，包括&lt;em&gt;开启&lt;/em&gt;、&lt;em&gt;关闭&lt;/em&gt;、&lt;em&gt;查看&lt;/em&gt;等操作。
    
    </summary>
    
      <category term="Linux" scheme="https://iochen.com/categories/Linux/"/>
    
      <category term="CentOS" scheme="https://iochen.com/categories/Linux/CentOS/"/>
    
    
      <category term="Linux" scheme="https://iochen.com/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://iochen.com/tags/CentOS/"/>
    
      <category term="firewall" scheme="https://iochen.com/tags/firewall/"/>
    
  </entry>
  
  <entry>
    <title>openssl RSA简单使用</title>
    <link href="https://iochen.com/2018/02/10/openssl-RSA-1/"/>
    <id>https://iochen.com/2018/02/10/openssl-RSA-1/</id>
    <published>2018-02-10T03:44:49.000Z</published>
    <updated>2018-08-17T12:09:07.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><p>最近看到的关于TLS的文章比较多啊，我也来凑凑热闹，来一篇关于非对称加密用法的博客。当然了，这篇文章对不懂的人也没什么用，懂的人也不会看这篇，还是写给自己看吧<a id="more"></a> 这里的非对称加密用的是<strong>RSA</strong></p><h1 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h1><p>非对称加密密钥的用法主要是如下几种：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">加密 → 公钥</span><br><span class="line">解密 → 私钥</span><br><span class="line">签名 → 私钥</span><br><span class="line">解密 → 私钥</span><br></pre></td></tr></table></figure><p></p><h1 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h1><h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><h3 id="生成私钥"><a href="#生成私钥" class="headerlink" title="生成私钥"></a>生成私钥</h3><p>比如我要生成一个叫<code>pr.pem</code>的私钥文件，直接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out pr.pem</span><br></pre></td></tr></table></figure><p></p><p>就可以了，就像这样： <img src="/img/openssl-RSA-1/f05d8842-7080-4b4c-bcc2-bbc07ceaefc5.png" alt="生成私钥"></p><h3 id="提取公钥"><a href="#提取公钥" class="headerlink" title="提取公钥"></a>提取公钥</h3><p>比如我要从<code>pr.pem</code>里提取<code>pu.pem</code>的公钥，直接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsa -pubout -in pr.pem -out pu.pem</span><br></pre></td></tr></table></figure><p></p><p>即可，可以看到： <img src="/img/openssl-RSA-1/6ed6724b-1fac-415e-bd11-8403680fe04c.png" alt="提取公钥"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>至此，公钥和私钥就生成好了，来看看吧！<br>私钥：<br><img src="/img/openssl-RSA-1/b567d11b-55c7-4e2e-9629-32a406427301.png" alt="私钥"> 公钥：<br><img src="/img/openssl-RSA-1/4f6e2b69-034f-4bdd-a02a-52ef9310e0bd.png" alt="公钥"></p><h2 id="加解密"><a href="#加解密" class="headerlink" title="加解密"></a>加解密</h2><h3 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h3><p>我们先创建一个叫<code>test</code>的文件，写点什么 <img src="/img/openssl-RSA-1/35036b25-44cf-4565-a645-ff2719ce065e.png" alt="测试文件"> 接下来加密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsautl -pubin -encrypt -in test -inkey pu.pem -out test_en</span><br></pre></td></tr></table></figure><p></p><p>来看看加密后的文件：<br><em>注：现在用<code>cat</code>是看不了的，只是一堆乱码，所以我用<code>hexdump</code>查看二进制文件</em> <img src="/img/openssl-RSA-1/a0caf393-a88d-4c94-83d5-4493d6278fa9.png" alt="加密后"></p><h3 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h3><p>简单！输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsautl -decrypt -in test_en -inkey pr.pem -out test_dn</span><br></pre></td></tr></table></figure><p></p><p>又回来了不是吗！<br>来看看解密后的文件： <img src="/img/openssl-RSA-1/ed16ca35-cee3-44ff-a71d-fbcdfd57b0eb.png" alt="解密后"> 完全一样！</p><h2 id="签名与验证"><a href="#签名与验证" class="headerlink" title="签名与验证"></a>签名与验证</h2><h3 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h3><p>我想为<code>test</code>文件签名，直接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl dgst -sha256 -sign pr.pem -out test_sign test</span><br></pre></td></tr></table></figure><p></p><p>即可生成签名文件<code>test_sign</code></p><h3 id="验证签名"><a href="#验证签名" class="headerlink" title="验证签名"></a>验证签名</h3><p>一样，一句命令！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl dgst -sha256 -verify pu.pem -signature test_sign test</span><br></pre></td></tr></table></figure><p></p><p>好的，得到一句 <img src="/img/openssl-RSA-1/e3b95074-4eee-4d75-907e-682898c8d55f.png" alt="验证通过"> 这就是验证通过了</p><p>如果这个原来数据被一些人修改后，比如：<br><em>这里我为<code>test</code>文件加了一行</em> <img src="/img/openssl-RSA-1/a9569407-189a-411c-9ebe-a9a19031e2c7.png" alt="修改后"> 就会出现： <img src="/img/openssl-RSA-1/d0ce75e7-7750-4b53-b574-069953fbc965.png" alt="验证失败"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这里我有一些没有说，因为写着写着就写的很详细很长了，具体可以参考<a href="https://www.cnblogs.com/gordon0918/p/5382541.html" target="_blank" rel="noopener">这位</a>的博客。</p><h1 id="个人总结"><a href="#个人总结" class="headerlink" title="个人总结"></a>个人总结</h1><p>其实，我只要记6段代码就好了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out pr.pem                                            //生成</span><br><span class="line">openssl rsa -pubout -in pr.pem -out pu.pem                            //提取</span><br><span class="line">openssl rsautl -pubin -encrypt -in test -inkey pu.pem -out test_en    //加密</span><br><span class="line">openssl rsautl -decrypt -in test_en -inkey pr.pem -out test_dn        //解密</span><br><span class="line">openssl dgst -sha256 -sign pr.pem -out test_sign test                 //签名</span><br><span class="line">openssl dgst -sha256 -verify pu.pem -signature test_sign test         //验证</span><br></pre></td></tr></table></figure><p></p><h1 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h1><ul><li>这里的密钥对不会在任何地方使用！</li><li><del>博主的正式公钥：地址：<a href="https://mega.nz/#!sM4GDIxY" target="_blank" rel="noopener">https://mega.nz/#!sM4GDIxY</a> 密钥：<code>!0bW3hOti7GQHtkXYgXY52o8IK9RZVos7hzdZV8fA4uc</code></del> 已弃用</li></ul><p>有问题请在下面问！（至于我会不会……😭）</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --&gt;&lt;p&gt;最近看到的关于TLS的文章比较多啊，我也来凑凑热闹，来一篇关于非对称加密用法的博客。当然了，这篇文章对不懂的人也没什么用，懂的人也不会看这篇，还是写给自己看吧
    
    </summary>
    
      <category term="Crypto" scheme="https://iochen.com/categories/Crypto/"/>
    
    
      <category term="openssl" scheme="https://iochen.com/tags/openssl/"/>
    
      <category term="加解密" scheme="https://iochen.com/tags/%E5%8A%A0%E8%A7%A3%E5%AF%86/"/>
    
      <category term="RSA" scheme="https://iochen.com/tags/RSA/"/>
    
      <category term="encrypt" scheme="https://iochen.com/tags/encrypt/"/>
    
      <category term="decrypt" scheme="https://iochen.com/tags/decrypt/"/>
    
  </entry>
  
  <entry>
    <title>Hexo中Gitalk配置使用教程-可能是目前最详细的教程</title>
    <link href="https://iochen.com/2018/01/06/use-gitalk-in-hexo/"/>
    <id>https://iochen.com/2018/01/06/use-gitalk-in-hexo/</id>
    <published>2018-01-06T11:22:20.000Z</published>
    <updated>2019-05-14T04:15:07.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><p><strong>Gitalk</strong>的详细配置与示例</p><a id="more"></a><h1 id="GitHub部分"><a href="#GitHub部分" class="headerlink" title="GitHub部分"></a>GitHub部分</h1><p>首先，你得有一个<strong>Github</strong>账号（这个就不多说了吧），下面，打开<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener"><strong><em>github.com/settings/applications/new</em></strong></a>，具体填法如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Application name <span class="comment">//应用名称，随便填</span></span><br><span class="line">Homepage URL <span class="comment">//没有过多要求，可以填自己的博客地址</span></span><br><span class="line">Application description <span class="comment">//应用描述，描述一下，无要求</span></span><br><span class="line">Authorization callback URL <span class="comment">//这个就有要求了，填自己要使用Gitalk的博客地址，不可乱填</span></span><br></pre></td></tr></table></figure><p></p><p>接着，你就可以得到<code>Client ID</code>和<code>Client Secret</code>，之后会用到的。接下来，我们回到hexo的主题配置里。</p><h1 id="文件修改"><a href="#文件修改" class="headerlink" title="文件修改"></a>文件修改</h1><h2 id="swig文件修改法"><a href="#swig文件修改法" class="headerlink" title="swig文件修改法"></a>swig文件修改法</h2><p>在这里，我以<strong>NexT</strong>主题做示范，如果发现你的主题大部分以<code>.ejs</code> 结尾 请见 <a href="#ejs文件修改法">ejs文件修改法</a></p><h3 id="添加swig代码"><a href="#添加swig代码" class="headerlink" title="添加swig代码"></a>添加swig代码</h3><p>在主题的<code>\layout\_third-party\comments</code>目录中，新建一个<code>gitalk.swig</code>文件，文件内容如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> page.comments &amp;&amp; theme.gitalk.enable %&#125;</span><br><span class="line"></span><br><span class="line">  &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://unpkg.com/gitalk/dist/gitalk.css"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;script src="https://unpkg.com/gitalk/dist/gitalk.min.js"&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">   &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        var gitalk = <span class="keyword">new</span> Gitalk(&#123;</span><br><span class="line">          clientID: <span class="string">'&#123;&#123; theme.gitalk.ClientID &#125;&#125;'</span>,</span><br><span class="line">          clientSecret: <span class="string">'&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;'</span>,</span><br><span class="line">          repo: <span class="string">'&#123;&#123; theme.gitalk.repo &#125;&#125;'</span>,</span><br><span class="line">          owner: <span class="string">'&#123;&#123; theme.gitalk.owner &#125;&#125;'</span>,</span><br><span class="line">          admin: &#123;&#123; theme.gitalk.adminUser &#125;&#125;,</span><br><span class="line">          id: &#123;&#123; theme.gitalk.ID &#125;&#125;,</span><br><span class="line">          labels: &#123;&#123; theme.gitalk.labels &#125;&#125;,</span><br><span class="line">          perPage: &#123;&#123; theme.gitalk.perPage &#125;&#125;,</span><br><span class="line">          pagerDirection: <span class="string">'&#123;&#123; theme.gitalk.pagerDirection &#125;&#125;'</span>,</span><br><span class="line">          createIssueManually: &#123;&#123; theme.gitalk.createIssueManually &#125;&#125;,</span><br><span class="line">          distractionFreeMode: &#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        gitalk.render(<span class="string">'gitalk-container'</span>)           </span><br><span class="line">       &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>还是，在主题的<code>\layout\_third-party\comments</code>目录中，找到一个<code>index.swig</code>的文件，打开，添加这一行代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include <span class="string">'gitalk.swig'</span> %&#125;</span><br></pre></td></tr></table></figure><p></p><p>接着，在主题的<code>\layout\_partials</code>目录中，找到<code>comments.swig</code>文件，打开，找到</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elseif theme.valine.appid and theme.valine.appkey %&#125;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"comments"</span> id=<span class="string">"comments"</span>&gt;</span><br><span class="line">  &lt;/div&gt;  </span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p></p><p>在空了一行的地方加上以下代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elseif theme.gitalk.enable %&#125;</span><br><span class="line">&lt;div id="gitalk-container"&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p></p><h3 id="进行配置"><a href="#进行配置" class="headerlink" title="进行配置"></a>进行配置</h3><p>接下来，转到主题的配置文件里，加上这一段：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">gitalk:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  ClientID: xxxxxx</span><br><span class="line">  ClientSecret: xxxxxxxxxxxx</span><br><span class="line">  repo: gitalk</span><br><span class="line">  owner: iosite</span><br><span class="line">  adminUser: <span class="string">"['iosite']"</span></span><br><span class="line">  ID: location.pathname</span><br><span class="line">  labels: <span class="string">"['Gitalk']"</span></span><br><span class="line">  perPage: <span class="number">15</span></span><br><span class="line">  pagerDirection: last</span><br><span class="line">  createIssueManually: <span class="literal">true</span></span><br><span class="line">  distractionFreeMode: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>*部分功能未添加，因为大部分人应该也用不到，这里就不多说了，如果需要更多，请见<a href="https://github.com/gitalk/gitalk" target="_blank" rel="noopener">官方文档</a></p><p>各个功能：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">enable: true #指的是是否开启Gitalk</span><br><span class="line">ClientID: xxxxxx #之前的Client ID</span><br><span class="line">ClientSecret: xxxxxxxxxxxx #之前的Client Secret</span><br><span class="line">repo: gitalk #你要存放的项目名，下文会详细再说</span><br><span class="line">owner: iosite #这个项目名的拥有者（GitHub账号或组织）</span><br><span class="line">adminUser: "['iosite']" #管理员用户，下文也会详细讲</span><br><span class="line">ID: location.pathname #页面ID，不知道就默认的就好了</span><br><span class="line">labels: "['Gitalk']" #GitHub issues的标签，下面会详细说</span><br><span class="line">perPage: 15 #每页多少个评论</span><br><span class="line">pagerDirection: last #排序方式是从旧到新（first）还是从新到旧（last）</span><br><span class="line">createIssueManually: true #如果当前页面没有相应的 isssue ，且登录的用户属于 admin，则会自动创建 issue。如果设置为 true，则显示一个初始化页面，创建 issue 需要点击 init 按钮。</span><br><span class="line">distractionFreeMode: false #是否启用快捷键(cmd|ctrl + enter) 提交评论.</span><br></pre></td></tr></table></figure><p></p><p>详细说明：</p><ul><li><p>repo<br><strong>Gitalk</strong>是基于<strong>GitHub</strong>的<strong>issues</strong>功能的，所以，你要为他建一个库或用现成的库，我个人建议新建一个，而<code>repo</code>就是你要用的库的名称。 比如，我就为<strong>Gitalk</strong>专门建了一个叫<code>gitalk</code>的库，所以在<code>repo:</code>处填<code>gitalk</code>。</p></li><li><p>adminUser<br>即管理员帐号。如果你是个人账号，那么这=里就填你的账户名和协作者的账户名。</p><p>以数组形式，外面再加一层引号</p></li><li><p>labels<br>主要是说一下，如果你之前用的是<strong>Gitment</strong>，又有评论，把这里改成<code>gitment</code>即可，如果没有，默认的就可以啦！以数组形式，外面再加一层引号</p></li></ul><h3 id="样式修改"><a href="#样式修改" class="headerlink" title="样式修改"></a>样式修改</h3><p>最后，在<code>layout/_third-party/comments/index.swig</code>中添加这样一行：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gt-container</span> <span class="selector-tag">a</span>&#123;<span class="attribute">border-bottom</span>: none;&#125;</span><br></pre></td></tr></table></figure><p>完成！</p><h2 id="ejs文件修改法"><a href="#ejs文件修改法" class="headerlink" title="ejs文件修改法"></a>ejs文件修改法</h2><h3 id="修改源码"><a href="#修改源码" class="headerlink" title="修改源码"></a>修改源码</h3><p>添加<code>layout/_partial/post/gitalk.ejs</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://unpkg.com/gitalk/dist/gitalk.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/gitalk/dist/gitalk.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> gitalk = <span class="keyword">new</span> Gitalk(&#123;</span></span><br><span class="line"><span class="javascript">        clientID: <span class="string">'&lt;%=theme.gitalk.ClientID%&gt;'</span>,</span></span><br><span class="line"><span class="javascript">        clientSecret: <span class="string">'&lt;%=theme.gitalk.ClientSecret%&gt;'</span>,</span></span><br><span class="line"><span class="javascript">        repo: <span class="string">'&lt;%=theme.gitalk.repo%&gt;'</span>,</span></span><br><span class="line"><span class="javascript">        owner: <span class="string">'&lt;%=theme.gitalk.owner%&gt;'</span>,</span></span><br><span class="line"><span class="javascript">        admin: <span class="xml"><span class="tag">&lt;<span class="name">%=theme.gitalk.adminUser%</span>&gt;</span>,</span></span></span><br><span class="line"><span class="javascript">        id: <span class="xml"><span class="tag">&lt;<span class="name">%=theme.gitalk.ID%</span>&gt;</span>,</span></span></span><br><span class="line"><span class="javascript">        labels: <span class="xml"><span class="tag">&lt;<span class="name">%=theme.gitalk.labels%</span>&gt;</span>,</span></span></span><br><span class="line"><span class="javascript">        perPage: <span class="xml"><span class="tag">&lt;<span class="name">%=theme.gitalk.perPage%</span>&gt;</span>,</span></span></span><br><span class="line"><span class="javascript">        pagerDirection: <span class="string">'&lt;%=theme.gitalk.pagerDirection%&gt;'</span>,</span></span><br><span class="line"><span class="javascript">        createIssueManually: <span class="xml"><span class="tag">&lt;<span class="name">%=theme.gitalk.createIssueManually%</span>&gt;</span>,</span></span></span><br><span class="line"><span class="javascript">        distractionFreeMode: <span class="xml"><span class="tag">&lt;<span class="name">%=theme.gitalk.distractionFreeMode%</span>&gt;</span></span></span></span><br><span class="line"><span class="undefined">      &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">      gitalk.render(<span class="string">'gitalk-container'</span>)</span></span><br><span class="line"><span class="undefined">     </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 <code>layout/_partial/article.ejs</code> 倒数第二行加入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.gitalk.enable</span>)&#123; %&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"gitalk-container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">%-</span> <span class="attr">include</span> <span class="attr">post</span>/<span class="attr">gitalk.ejs</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure><p>配置修改法见<a href="#进行配置">上文</a>，与swig格式大同小异</p><p>Demo就在下面，欢迎留言评论！</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --&gt;&lt;p&gt;&lt;strong&gt;Gitalk&lt;/strong&gt;的详细配置与示例&lt;/p&gt;
    
    </summary>
    
      <category term="Blog build" scheme="https://iochen.com/categories/Blog-build/"/>
    
    
      <category term="hexo" scheme="https://iochen.com/tags/hexo/"/>
    
      <category term="gitalk" scheme="https://iochen.com/tags/gitalk/"/>
    
  </entry>
  
  <entry>
    <title>hexo评论系统——Gitment</title>
    <link href="https://iochen.com/2018/01/05/use-gitment-in-your-blog/"/>
    <id>https://iochen.com/2018/01/05/use-gitment-in-your-blog/</id>
    <published>2018-01-05T11:22:56.000Z</published>
    <updated>2019-05-19T03:45:43.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --><p>由于<strong>hexo</strong>生成的是静态博客，所以有些功能是无法附加上去的，就比如说评论系统。<br>我用过的评论系统不多，也只有<strong>Disqus</strong>和<strong>Gitment</strong>，其他的也只是了解一些，我就来谈谈为什么要用<strong>Gitment</strong>吧！<br>国内之前是有<strong>多说</strong>的，但由于一些“原因”被迫关闭了。现在国内比较流行的是<strong>畅言</strong>，但毕竟这还是要经过审查的，所以我没有用。<br>之所以之前使用<strong>Disqus</strong>，是因为它在国外的应用很广，自己也试用了用，感觉不错，所以之前一直用的是<strong>Disqus</strong>。<br><strong>Gitment</strong>用下来我个人感觉整体还不错，下面，我就来说说应该怎样配置<strong>Gitment</strong>吧。<br><a id="more"></a></p><h1><font color="red"><b>！！由于Gitment不再维护，建议使用<a href="/2018/01/06/use-gitalk-in-hexo/">Gitalk</a>！！</b></font></h1><h2 id="配置Gitment"><a href="#配置Gitment" class="headerlink" title="配置Gitment"></a>配置<strong>Gitment</strong></h2><p>首先，你得有一个<strong>Github</strong>账号（这个就不多说了吧），下面，打开<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener"><strong><em>这个链接</em></strong></a>，具体填法如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Application name <span class="comment">//应用名称，随便填</span></span><br><span class="line">Homepage URL <span class="comment">//没有过多要求，可以填自己的博客地址</span></span><br><span class="line">Application description <span class="comment">//应用描述，描述一下，无要求</span></span><br><span class="line">Authorization callback URL <span class="comment">//这个就有要求了，填自己要使用Gitment的博客地址，不可乱填</span></span><br></pre></td></tr></table></figure><p></p><p>接着，你就可以得到<code>Client ID</code>和<code>Client Secret</code>，之后会用到的。接下来，我们回到hexo的主题配置里继续！</p><h3 id="如何配置"><a href="#如何配置" class="headerlink" title="如何配置"></a>如何配置</h3><p>如果在主题的配置文件里有<code>gitment</code> ，就继续往下看吧！如果没有，请翻到底部，或点击左边的<code>附：如何添加Gitment功能</code>。 （我只用过<strong>Next</strong>主题，只知道<strong>NexT</strong>主题是有的）<br>怎么填呢？见下面</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">gitment:</span><br><span class="line">  enable: <span class="literal">true</span> <span class="comment">//是否打开</span></span><br><span class="line">  count: <span class="literal">true</span>  <span class="comment">//是否计数</span></span><br><span class="line">  cleanly: <span class="literal">false</span> <span class="comment">//是否隐藏'Powered by Gitment'字样</span></span><br><span class="line">  language: zh-Hans <span class="comment">//语言</span></span><br><span class="line">  github_user: geedme <span class="comment">//你的GitHub用户名或ID</span></span><br><span class="line">  github_repo: gitment <span class="comment">//你要存放的库，下文会详细写</span></span><br><span class="line">  client_id: xxxxx <span class="comment">//上文的的Client Id</span></span><br><span class="line"></span><br><span class="line">  client_secret: xxxxxx <span class="comment">//上文的Client Secret</span></span><br></pre></td></tr></table></figure><p><em>如需复制，请删除 // 及后方内容，或将 // 改为 #</em><br><em>我之前踩过一个坑，就是 冒号 和后面的内容之间一定要加空格！否则会出错的！！</em></p><p>至于还有几个选项没有写，一是因为不常用，二是因为……我也没用过……不能误导大家。<br>可能<code>repo</code>说的不太明白（其实是我第一次没搞懂），我这里详细说一下。其实<strong>Gitment</strong>是基于<strong>GitHub</strong>的<strong>issues</strong>功能的，所以，你要为他建一个库或用现成的库，我个人建议新建一个，而<code>repo</code>就是你要用的库的名称。 比如，我就为<strong>Gitment</strong>专门建了一个叫<code>gitment</code>的库，所以在<code>github_repo:</code>处填<code>gitment</code>。</p><h3 id="附：如何添加Gitment功能"><a href="#附：如何添加Gitment功能" class="headerlink" title="附：如何添加Gitment功能"></a>附：如何添加Gitment功能</h3><p><em>附加内容未亲自实验过，内容来源于网络</em></p><p>见<a href="https://dj9399.github.io/post/Gitment%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/" target="_blank" rel="noopener">此网站</a>(懒得写了……)</p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>这是我写的第一篇”有意义”的博文，欢迎大家在下方评论！</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Sun Jul 26 2020 14:49:13 GMT+0800 (Taipei Standard Time) --&gt;&lt;p&gt;由于&lt;strong&gt;hexo&lt;/strong&gt;生成的是静态博客，所以有些功能是无法附加上去的，就比如说评论系统。&lt;br&gt;我用过的评论系统不多，也只有&lt;strong&gt;Disqus&lt;/strong&gt;和&lt;strong&gt;Gitment&lt;/strong&gt;，其他的也只是了解一些，我就来谈谈为什么要用&lt;strong&gt;Gitment&lt;/strong&gt;吧！&lt;br&gt;国内之前是有&lt;strong&gt;多说&lt;/strong&gt;的，但由于一些“原因”被迫关闭了。现在国内比较流行的是&lt;strong&gt;畅言&lt;/strong&gt;，但毕竟这还是要经过审查的，所以我没有用。&lt;br&gt;之所以之前使用&lt;strong&gt;Disqus&lt;/strong&gt;，是因为它在国外的应用很广，自己也试用了用，感觉不错，所以之前一直用的是&lt;strong&gt;Disqus&lt;/strong&gt;。&lt;br&gt;&lt;strong&gt;Gitment&lt;/strong&gt;用下来我个人感觉整体还不错，下面，我就来说说应该怎样配置&lt;strong&gt;Gitment&lt;/strong&gt;吧。&lt;br&gt;
    
    </summary>
    
      <category term="Blog build" scheme="https://iochen.com/categories/Blog-build/"/>
    
    
      <category term="hexo" scheme="https://iochen.com/tags/hexo/"/>
    
      <category term="gitment" scheme="https://iochen.com/tags/gitment/"/>
    
  </entry>
  
</feed>
